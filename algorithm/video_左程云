001 给定一个无序整型数组arr，找到数组中未出现的最小正整数。
    【举例】
        arr=[-1,2,3,4]  返回1
        arr=[1,2,3,4]   返回5
    【要求】
        时间O(N) 空间O(1)
    l   初始0，[1 --> l]上面的数都已经收集
    r   初始N，遍历到当前位置，在后续最优的情况下，可以遍历[1 --> r]
    位于arr[i]，实际遍历以l遍历
        int val = arr[i]
        如果val <= l
            r --;
        else if val > r
            r --;
        else if val == l+1
            l ++;
        else {
            if (arr(val-1) == val)
                r --;
            else
                swap(arr, i, val-1)
                回到判断
        }
        
